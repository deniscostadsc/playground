---
name: Lint
on: [push]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check if tags are correct
        run: make check-tags
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: ".docker/lint/c-lint.Dockerfile"
          tags: c-lint:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: ".docker/lint/clj-lint.Dockerfile"
          tags: clj-lint:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: ".docker/lint/cpp-lint.Dockerfile"
          tags: cpp-lint:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: ".docker/lint/dart-lint.Dockerfile"
          tags: dart-lint:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: ".docker/lint/go-lint.Dockerfile"
          tags: go-lint:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: ".docker/lint/py-lint.Dockerfile"
          tags: py-lint:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
      - name: Run C lint
        uses: addnab/docker-run-action@v3
        with:
          image: c-lint:latest
          options: -v ${{ github.workspace }}:/code -e LINT_FIX=1
          run: cpplint --quiet --recursive --extensions=c --filter="-legal/copyright,-runtime/arrays" . && scripts/run-clang-format.py --clang-format-executable=clang-format --extensions=c -r .
      - name: Run Clojure lint
        uses: addnab/docker-run-action@v3
        with:
          image: clj-lint:latest
          options: -v ${{ github.workspace }}:/code -e LINT_FIX=1
          run: ./scripts/lint-clj.sh
      - name: Run C++ lint
        uses: addnab/docker-run-action@v3
        with:
          image: cpp-lint:latest
          options: -v ${{ github.workspace }}:/code -e LINT_FIX=1
          run: cpplint --quiet --recursive --extensions=cpp --filter="-legal/copyright,-runtime/arrays" . && scripts/run-clang-format.py --clang-format-executable=clang-format --extensions=cpp -r .
      - name: Run Dart lint
        uses: addnab/docker-run-action@v3
        with:
          image: dart-lint:latest
          options: -v ${{ github.workspace }}:/code -e LINT_FIX=1
          run: ./scripts/lint-dart.sh
      - name: Run Go lint
        uses: addnab/docker-run-action@v3
        with:
          image: go-lint:latest
          options: -v ${{ github.workspace }}:/code -e LINT_FIX=1
          run: |
            [ "$(gofmt -l . | wc -l)" -eq 0 ]
      - name: Run Python lint
        uses: addnab/docker-run-action@v3
        with:
          image: py-lint:latest
          options: -v ${{ github.workspace }}:/code -e LINT_FIX=1
          run: blue --check . && flake8 && isort -c .
